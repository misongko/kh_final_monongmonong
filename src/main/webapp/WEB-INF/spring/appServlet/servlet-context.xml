<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">


	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.kh.monong" />
	
	<!-- #8. interceptor 등록 -->
	<interceptors>
		<interceptor>
			<mapping path="/**"/>		
			<beans:bean id="logInterceptor" class="com.kh.monong.common.interceptor.LogInterceptor"/>
		</interceptor>
	</interceptors>
	
	<!-- #9.1. aop관련 어노테이션등록처리 -->
	<!-- #11.2. root-context의 트랜잭션관련처리를 가져와 servlet-context에 적용 -->
	<aop:aspectj-autoproxy/>
	
		
	<!-- #10.1 multipartResover 등록-->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"	>
		<beans:property name="maxUploadSize" value="52428800"></beans:property><!--  50mb 한건의 파일요청시 첨부할 파일등의 총용량 -->
		<beans:property name="maxUploadSizePerFile" value="10245760"></beans:property><!-- 10mb 한건의 파일당 용량 -->
		<beans:property name="maxInMemorySize" value="10240"></beans:property><!--  10kb이상이면 임시파일을 생성해서 관리 -->
		<beans:property name="defaultEncoding" value="utf-8"/>
	</beans:bean>

	<!-- #12.1. jsonView 빈등록 -->
	<beans:bean id="jsonView" class="net.sf.json.spring.web.servlet.view.JsonView">
		<beans:property name="contentType" value="application/json; charset=utf-8"/>
	</beans:bean>
	
	<!-- #12.2. BeanNameViewResolver viewName에 해당하는 빈을 view로 연결하는 resolver -->
	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="1"/>
	</beans:bean>

	<!-- #13.1 jackson message converter bean 등록 -->
	<beans:bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />

	<!-- 메일 관련 bean 등록-->
	<beans:bean id="mailSender"	class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.gmail.com" />
		<beans:property name="port" value="587" /><!-- 465 or 25 -->
		<beans:property name="username" value="sooappeal31@gmail.com" />
		<beans:property name="password" value="ehwwgexemvidomcs" />
		<beans:property name="defaultEncoding" value="utf-8" />
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.transport.protocol">smtp</beans:prop>
				<beans:prop key="mail.smtp.auth">true</beans:prop>
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
				<beans:prop key="mail.debug">true</beans:prop>
				<beans:prop key="mail.smtp.ssl.trust">smtp.gmail.com</beans:prop>
				<beans:prop key="mail.smtp.ssl.protocols">TLSv1.2</beans:prop>
		
			</beans:props>
		</beans:property>
	</beans:bean>

	<!-- scheduler task 추가 -->
	<task:annotation-driven scheduler="scheduler"/>
	<task:scheduler id="scheduler" pool-size="10"/>
 	<task:scheduled-tasks scheduler="scheduler">
		<!-- 수요일 결제 진행 -->
		<task:scheduled ref="subscribeController" method="payschedule" cron = "0 58 * * * WED"/>
		<!-- 금요일 배송상태 변경 -->
		<task:scheduled ref="adminController" method="dStatusschedule" cron = "0 0 18 * * Fri"/>
	</task:scheduled-tasks>
	
	<!-- #14.1. echoHandler 등록 -->
	<!-- 
	<websocket:handlers>
		<websocket:mapping handler="echoHandler" path="/echo"/>
		<websocket:sockjs/>
	</websocket:handlers>
	
	<websocket:message-broker application-destination-prefix="/app">
		<websocket:stomp-endpoint path="/stomp">
			<websocket:sockjs/>
		</websocket:stomp-endpoint>
		<websocket:simple-broker prefix="/topic, /app"/>
	</websocket:message-broker>
 -->
	
	
</beans:beans>
